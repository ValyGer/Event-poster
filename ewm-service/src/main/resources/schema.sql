  DROP TABLE IF EXISTS compilation_events;
  DROP TABLE IF EXISTS compilations;
  DROP TABLE IF EXISTS requests;
  DROP TABLE IF EXISTS events;
  DROP TABLE IF EXISTS categories;
  DROP TABLE IF EXISTS users;


CREATE TABLE users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  email VARCHAR(254) NOT NULL UNIQUE,
  name VARCHAR(250) NOT NULL,
  PRIMARY KEY (id)
);

CREATE TABLE categories (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(50) NOT NULL UNIQUE,
  PRIMARY KEY (id)
);

CREATE TABLE events (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  annotation VARCHAR(2000) NOT NULL,
  category_id BIGINT NOT NULL,
  created_on TIMESTAMP NOT NULL,
  description VARCHAR(7000) NOT NULL,
  event_date TIMESTAMP NOT NULL,
  initiator_id BIGINT NOT NULL,
  paid BOOLEAN NOT NULL,
  loc_lat DOUBLE PRECISION NOT NULL,
  loc_lon DOUBLE PRECISION NOT NULL,
  participant_limit BIGINT NOT NULL,
  published_on TIMESTAMP,
  request_moderation BOOLEAN NOT NULL,
  state varchar(50) NOT NULL,
  title VARCHAR(120) NOT NULL,
  confirmed_requests BIGINT,
  PRIMARY KEY (id)
);

CREATE TABLE requests (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  created_on TIMESTAMP NOT NULL,
  event_id BIGINT NOT NULL,
  requester_id BIGINT NOT NULL,
  status VARCHAR(15) NOT NULL,
  PRIMARY KEY (id)
);

CREATE TABLE compilations (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  is_pinned BOOLEAN NOT NULL,
  title VARCHAR(50) NOT NULL,
  PRIMARY KEY (id)
);

CREATE TABLE compilation_events (
  compilation_id BIGINT NOT NULL,
  event_id BIGINT NOT NULL,
  PRIMARY KEY (compilation_id, event_id)
);

ALTER TABLE events ADD CONSTRAINT fk_event_category FOREIGN KEY (category_id) REFERENCES categories (id) ON DELETE CASCADE;

ALTER TABLE events ADD CONSTRAINT fk_event_initiator FOREIGN KEY (initiator_id) REFERENCES users (id) ON DELETE CASCADE;

ALTER TABLE requests ADD CONSTRAINT fk_event_id FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE;

ALTER TABLE requests ADD CONSTRAINT fk_requester_id FOREIGN KEY (requester_id) REFERENCES users (id) ON DELETE CASCADE;

ALTER TABLE compilation_events ADD CONSTRAINT fk_comp_events_to_comps FOREIGN KEY (compilation_id) REFERENCES compilations (id);

ALTER TABLE compilation_events ADD CONSTRAINT fk_comp_events_to_events FOREIGN KEY (event_id) REFERENCES events (id);





